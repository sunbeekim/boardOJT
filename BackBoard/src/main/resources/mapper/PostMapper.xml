<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.board.domain.post.dao.PostMapper">

    <resultMap id="postMap" type="com.example.board.domain.post.entity.Post">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="userId" column="user_id"/>
        <result property="nickname" column="nickname"/>
        <result property="viewCount" column="view_count"/>
        <result property="commentCount" column="comment_count"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <insert id="insert" parameterType="com.example.board.domain.post.entity.Post" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO posts (
            title, content, user_id, created_at, updated_at
        )
        VALUES (
            #{title}, #{content}, #{userId}, NOW(), NOW()
        )
    </insert>

    <select id="findById" resultType="Post" parameterType="long">
        SELECT p.*, u.nickname 
        FROM posts p 
        JOIN users u ON p.user_id = u.id 
        WHERE p.id = #{id}
    </select>

    <select id="findByUserId" resultType="Post" parameterType="long">
        SELECT *
        FROM posts       
        WHERE user_id = #{userId}
    </select>

    <update id="update" parameterType="com.example.board.domain.post.entity.Post">
        UPDATE posts
        SET
            title = #{title},
            content = #{content},
            updated_at = NOW()
        WHERE id = #{id}
    </update>

    <delete id="deleteById" parameterType="long">
        DELETE FROM posts WHERE id = #{id}
    </delete>

    
    <update id="increaseViewCount" parameterType="map">
        UPDATE posts SET view_count = #{viewCount} WHERE id = #{id}
    </update>


    <update id="increaseCommentCount" parameterType="long">
        UPDATE posts SET comment_count = comment_count + 1 WHERE id = #{id}
    </update>
    <!-- 닉네임 조인, 댓글 수 추가 -->
    <select id="searchPosts" resultType="PostResponseDto" parameterType="map">
        SELECT u.nickname, p.*
        FROM Posts p JOIN Users u ON p.user_id = u.id
        WHERE 1 = 1
            <if test="title != null">AND title LIKE CONCAT('%', #{title}, '%')</if>
            <if test="userNickname != null">AND u.nickname = #{userNickname}</if>
            <if test="dateFrom != null">AND p.created_at &gt;= #{dateFrom}</if>  
            <if test="dateTo != null">AND p.created_at &lt;= #{dateTo}</if>            
        ORDER BY ${sort} ${direction}
        LIMIT #{size} OFFSET #{offset}
    </select>

</mapper>
